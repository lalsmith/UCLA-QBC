install.packages("ape")
library("ape", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("geiger")
library("geiger", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
2+2
getwd()
setwd("/Users/thesmithfamily/GitHub/UCLA-QBC/In-Class-Excercises")
?lm
xx <- 2
xx
22 -> yy
yy
grad.school.tips <- c("use a reference manager", "learn a programming languate", "write lots of papers")
grad.school.tips
str(grad.school.tips)
?str()
?cat
cat(grad.school.tips, sep = "\n")
rm(yy)
yy
?rm
ls()
ls()
library(ape)
list.files
list.files()
tt <- read.tre("tree.tre")
tt <- read.tree("tree.tre")
str(tt)
?str()
attributes(tt)
tt$tip.label[1:10]
pruned.tree <- drop.tip(tt, tt$tip.label[1:7900])
plot(ladderize(pruned.tree), cex = 0.5, type = "radial")
pruned.tree <- drop.tip(tt, tt$tip.label[1:7900])
plot(ladderize(pruned.tree), cex = 0.5)
for (ii in 1:5) {
cat("\nthe number is ", ii)
}
xx <- 1
xx <- 1
while (xx < 5) {
xx<- xx+1;
if (xx == 3) {
break; }
}
print (xx)
?%%
2%%9
if (xx == 'a')
if (xx == 'b')
if (xx == 'c')
for(ii in 1:6) {
if (ii %% 2) {
cat(ii, " is odd\n")
}
else{
cat(ii, " is even\n")
}
}
doubler <- function(num) {
doubled = 2 * num
cat("witness the awesome power of the doubler\n")
cat("I changed", num, " to ", doubled, "\n")
cat("you're welcome!\n")
return(doubled)
}
doubler()
greeter <- function(Name) {cat('Hello, ', name, '\n')}
greeter(Lauren)
?rnorm
rnorm(1)
rnorm(1)
rnorm(10)
(SD=1): s1<-rnorm(1000, mean=0, sd=1)
s1<-rnorm(1000, mean=0, sd=1)
s3<-rnorm(1000,mean=0,sd=3)
head(s1)
head(s3)
hist(s1,col=2,xlab="Value",main="Sigma=1")
hist(s3, col="blue", xlab="Value", main="Sigma=1")
par(mfrow=c(2,1), mar=c(4, 4, 3, 2)) #sets plotting area and margins
hist(s1,col=2,xlab="Value",main="Sigma=1")
?mar
?margin.table
par(mfrow=c(2,1), mar=c(4, 4, 3, 2))
hist(s1,col=2,xlab="Value",main="Sigma=1")
hist(s3, col="blue", xlab="Value", main="Sigma=1")
hist(s1,col=2,xlab="Value",main="Sigma=1")
hist(s3, col="blue", xlab="Value", main="Sigma=3")
dev.off() #shuts off current output device, otherwise it will send all output to same PDF file
par(mfrow=c(2,1), mar=c(4, 4, 3, 2))
hist(s1,col=2,xlab="Value",main="Sigma=1")
hist(s3, col="blue", xlab="Value", main="Sigma=3")
par(mfrow=c(2,1), mar=c(4, 4, 3, 2)) #sets plotting area and
margins
hist(s1,col=2,xlab="Value",main=expression(paste(sigma,"=1")))
hist(s3,col=4,xlab="Value",main=expression(paste(sigma,"=3")))
par(mfrow=c(2,1), mar=c(4, 4, 3, 2)) #sets plotting area and
margins
hist(s1,col=2,xlab="Value",main=expression(paste(sigma,"=1")))
hist(s3,col=4,xlab="Value",main=expression(paste(sigma,"=3")))
par(mfrow=c(2,1), mar=c(4, 4, 3, 2))
hist(s1,col=2,xlab="Value",main=expression(paste(sigma,"=1")))
hist(s3,col=4,xlab="Value",main=expression(paste(sigma,"=3")))
s3<-rnorm(1000)
plot(s1, s3)
par(mfrow=c(2,1), mar=c(4, 4, 5, 2))
s3<-rnorm(1000)
plot(s1, s3)
par(mfrow=c(2,1), mar=c(4, 4, 3, 2))
plot(density(s1))
par(mfrow=c(2,1), mar=c(4, 4, 3, 5))
plot(density(s1))
par(mfrow=c(2,1), mar=c(4, 4, 3, 2))
s3 <-rnorm(1000, mean)
?lwd
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal
lines(density(s3),col=4,lwd=4)
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
abline(v=quantile(s1,0.9))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal distribution")
lines(density(s3),col=4,lwd=4)
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
par(mfrow=c(2,1), mar=c(4, 4, 3, 2))
hist(s1,col=2,xlab="Value",main="Sigma=1")
hist(s3, col="blue", xlab="Value", main="Sigma=3")
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal distribution")
lines(density(s3),col=4,lwd=4)
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal distribution")
pdf(file="Normal_density.pdf", width=6,height=6)
#sets plotting and margins, mfrow is 1 x 1
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
#plot has a function of plotting things #nesting density within plot you get the smoothing
#ldw command controls, xlim changes the limits (imp if you are adding two plots, make sure to use the limits from the larger graph), works with ylim also
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal distribution")
#add the SD=3 values by using lines, it will add lines onto an existing plot, throwing more data ontop of our other graph
#the same things as we did with plot in that step
lines(density(s3),col=4,lwd=4)
#to add a legend, use the function legend, first are the coordinates of where the legend will go,
#cex sets how large the legend is
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
#we can highlight the upper 10% of each distribution with a vertical line:
abline(v=quantile(s1,0.9))
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal distribution")
lines(density(s3),col=4,lwd=4)
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal
distribution")
lines(density(s3),col=4,lwd=4) #add the SD=3 values
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
abline(v=quantile(s1,0.9),lty=2,lwd=3,col=2)
abline(v=quantile(s3,0.9),lty=2,lwd=3,col=4)
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal
distribution")
lines(density(s3),col=4,lwd=4) #add the SD=3 values
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
abline(v=quantile(s1,0.9),lty=2,lwd=3,col=2)
abline(v=quantile(s3,0.9),lty=2,lwd=3,col=4)
dev.off()
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal
distribution")
lines(density(s3),col=4,lwd=4) #add the SD=3 values
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
abline(v=quantile(s1,0.9),lty=2,lwd=3,col=2)
abline(v=quantile(s3,0.9),lty=2,lwd=3,col=4)
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
plot(density(s1),col=2,lwd=4,xlab="Value",xlim=c(-15,15),main="Normal distribution")
lines(density(s3),col=4,lwd=4) #add the SD=3 values
legend(-15,0.4,c("sigma=1","sigma=3"),lwd=4,col=c(2,4),cex=1.5)
abline(v=quantile(s1,0.9),lty=2,lwd=3,col=2)
abline(v=quantile(s3,0.9),lty=2,lwd=3,col=4)
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
boxplot(cbind(s1,s3),names=c("Sigma=1","Sigma=3"),main="Draws from a
normal distribution",col=c(2,4))
cbind(s1, s3)
rbind(s1, s3)
par(mfrow=c(1,1), mar=c(4, 4, 3, 2))
boxplot(cbind(s1,s3),names=c("Sigma=1","Sigma=3"),main="Draws from a
normal distribution",col=c(2,4))
